# ############################################################################
# Model: CRDNN + CTC
# Encoder: CRDNN
# Decoder: CTC + greedy earch
# Tokens: unigram
# losses: CTC
# Training: Common Voice 10.0 small English
# Authors: Titouan Parcollet 2021; Luca Della Libera 2022
# ############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data preparation
dataset_size: small
dataset_version: "10_0"
dataset_dir: !ref data/common_voice_<dataset_version>
manifest_dir: !ref <dataset_dir>_<dataset_size>
locales: ["rw"]

# Data files and directories
output_dir: !ref results/rw/<dataset_size>/ctc/<seed>
wer_file: !ref <output_dir>/wer.
save_dir: !ref <output_dir>/save
train_log: !ref <output_dir>/train_log.txt



# We remove utterances longer than 10s in the train/dev/test sets as
# longer sentences certainly correspond to "open microphones".
avoid_if_longer_than: 10.0

ckpt_interval_minutes: 15 # save checkpoint every N min

# Training parameters
number_of_epochs: 100
lr: 1.0
sorting: ascending
auto_mix_prec: False

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 8 per GPU to fit 32GB of VRAM
batch_size: 12
test_batch_size: 4

# BPE parameters
token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 80

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
    shuffle: True
    num_workers: 6

valid_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: 6

test_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: 6

# Model parameters
activation: !name:torch.nn.LeakyReLU
dropout: 0.15
cnn_blocks: 3
cnn_channels: (128, 200, 256)
inter_layer_pooling_size: (2, 2, 2)
cnn_kernelsize: (3, 3)
time_pooling_size: 4
rnn_class: !name:speechbrain.nnet.RNN.LSTM
rnn_layers: 5
rnn_neurons: 1024
rnn_bidirectional: True
dnn_blocks: 2
dnn_neurons: 1024
dec_neurons: 1024
joint_dim: 1024
output_neurons: 27

# Decoding parameters
blank_index: 0  # index(blank/unk) = 0
#label_smoothing: 0.0 TODO: check

# Normalization
normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global

# Frequency domain SpecAugment
augmentation: !new:speechbrain.lobes.augment.SpecAugment
    time_warp: True
    time_warp_window: 5
    time_warp_mode: bicubic
    freq_mask: True
    n_freq_mask: 2
    time_mask: True
    n_time_mask: 2
    replace_with_zero: False
    freq_mask_width: 30
    time_mask_width: 40

# Features
compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

# Models
enc: !new:speechbrain.lobes.models.CRDNN.CRDNN
   input_shape: [null, null, !ref <n_mels>]
   activation: !ref <activation>
   dropout: !ref <dropout>
   cnn_blocks: !ref <cnn_blocks>
   cnn_channels: !ref <cnn_channels>
   cnn_kernelsize: !ref <cnn_kernelsize>
   inter_layer_pooling_size: !ref <inter_layer_pooling_size>
   time_pooling: True
   using_2d_pooling: False
   time_pooling_size: !ref <time_pooling_size>
   rnn_class: !ref <rnn_class>
   rnn_layers: !ref <rnn_layers>
   rnn_neurons: !ref <rnn_neurons>
   rnn_bidirectional: !ref <rnn_bidirectional>
   rnn_re_init: True
   dnn_blocks: !ref <dnn_blocks>
   dnn_neurons: !ref <dnn_neurons>

ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dnn_neurons>
    n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

modules:
    enc: !ref <enc>
    ctc_lin: !ref <ctc_lin>
    normalize: !ref <normalize>

model: !new:torch.nn.ModuleList
    - [!ref <enc>, !ref <ctc_lin>]

# Optimizers
opt_class: !name:torch.optim.Adadelta
    lr: !ref <lr>
    rho: 0.95
    eps: 1.e-8

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

# Metrics
error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True

# Misc
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_dir>
    recoverables:
        model: !ref <model>
        scheduler: !ref <lr_annealing>
        normalizer: !ref <normalize>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
